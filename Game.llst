       -                
     1 -                       ; Game of Life on a 24x24 LED.
     2 -                       
     3 -                       ; Rules taken from Wikipedia, http://en.wikipedia.
     4 -                       
     5 -                       ; The universe of the Game of Life is an infinite 
     6 -                       ; each of which is in one of two possible states, 
     7 -                       ; Every cell interacts with its eight neighbours, 
     8 -                       ; vertically, or diagonally adjacent. At each step
     9 -                       
    10 -                       ;   1. Any live cell with fewer than two live neig
    11 -                       ;   2. Any live cell with more than three live nei
    12 -                       ;   3. Any live cell with two or three live neighb
    13 -                       ;   4. Any dead cell with exactly three live neigh
    14 -                       
    15 -                       ; The initial pattern constitutes the 'seed' of th
    16 -                       ; The first generation is created by applying the 
    17 -                       ; births and deaths happen simultaneously, and the
    18 -                       ; (In other words, each generation is based entire
    19 -                       ; The rules continue to be applied repeatedly to c
    20 -                       
    21 -                       ; ================================================
    22 -                       
    23 -                       ; My version has a 24x24 grid displayed on the scr
    24 -                       ; There is no editor so edit Grid1 and re-compile.
    25 -                       
    26 -                       ; Note that I have two grids 26x26 bytes, but I on
    27 -                       ; This is to make the calculations simpler when ca
    28 -                       ; I don't have to do any calculations for wrap aro
    29 -                       
       -                
    30 -                       
    31 -                       ; The Load data (pin 12) on Max 7219 is connected 
    32 -                       ; Clock (pin 13) on Max 7219 is connected to CB1 (
    33 -                       ; Data In (pin 1) on Max 7219 is connected to CB2 
    34 -                       
    35 -                       
    36 -                       ; File: Game.asm
    37 -                       ; 11/08/2015
    38 -                       
    39 -                              PW 80         ;Page Width (# of char/line)
    40 -                              PL 60          ;Page Length for HP Laser
    41 -                              INCLIST ON     ;Add Include files in Listin
    42 -                       
    43 -                                       ;***********************
    44 -                                       ;Test for Valid Processo
    45 -                                       ;***********************
    46 -                           IF  USING_816
    47 -                           ELSE
    48 -                               EXIT         "Not Valid Processo
    49 -                           ENDIF
    50 -                       
    51 -                       ;*************************************************
    52 -                       ;*************************************************
    53 -                       ; End of testing for proper Command line Options f
    54 -                       ;*************************************************
    55 -                       ;*************************************************
    56 -                       
    57 -                       
    58 -                                   title  "Game of Life on a 24x24 
    59 -                                   sttl
    60 -                       
    61 -                       ; Constants, VIA addresses
    62 -             00007FC0  VIA           EQU $7FC0
    63 -             00007FC0  VIA_IOB       EQU VIA             ; Input/Output r
    64 -             00007FC1  VIA_IOA       EQU VIA+1           ; Input/Output r
    65 -             00007FC2  VIA_DDRB      EQU VIA+2           ; Data Direction
    66 -             00007FC3  VIA_DDRA      EQU VIA+3           ; Data Direction
       -                
    67 -             00007FC4  VIA_T1CL      EQU VIA+4           ; T1 Low Order C
    68 -             00007FC5  VIA_T1CH      EQU VIA+5           ; T1 High Order 
    69 -             00007FC6  VIA_T1LL      EQU VIA+6           ; T1 Low Order L
    70 -             00007FC7  VIA_T1LH      EQU VIA+7           ; T1 High Order 
    71 -             00007FC8  VIA_T2CL      EQU VIA+8           ; T2 Low Order C
    72 -             00007FC9  VIA_T2CH      EQU VIA+9           ; T2 High Order 
    73 -             00007FCA  VIA_SR        EQU VIA+10          ; Shift Register
    74 -             00007FCB  VIA_ACR       EQU VIA+11          ; Auxiliary Cont
    75 -             00007FCC  VIA_PCR       EQU VIA+12          ; Pheriperal Con
    76 -             00007FCD  VIA_IFR       EQU VIA+13          ; Interrupt Flag
    77 -             00007FCE  VIA_IER       EQU VIA+14          ; Interrupt Enab
    78 -             00007FCF  VIA_IOA2      EQU VIA+15          ; Input/Output r
    79 -                       
    80 -                       ; VIA stuff
    81 -             00000030  add           EQU $30             ; Address in Max
    82 -             00000031  dat           EQU $31             ; Data for Addre
    83 -             00000032  units         EQU $32             ; LED units.
    84 -             00000033  count         EQU $33             ; Counter
    85 -             00000034  rows          EQU $34             ; Rows
    86 -             00000035  cols          EQU $35             ; Columns
    87 -             00000036  temp          EQU $36             ; Temp Storage
    88 -             00000037  LEDGridl      EQU $37             ; Grid Pointer L
    89 -             00000038  LEDGridh      EQU $38             ; Grid Pointer H
    90 -             00000039  temp2         EQU $39             ; Temp Storage 2
    91 -                       
    92 -                       ; Game Of Life Stuff
    93 -             00000040  tick          EQU $40             ; Even use grid 
    94 -             00000041  row_counter   EQU $41             ; count the rows
    95 -             00000042  GridLow       EQU $42             ; Grid pointer.
    96 -             00000043  GridHi        EQU $43
    97 -             00000044  WorkGridLow   EQU $44             ; Grid Pointer f
    98 -             00000045  WorkGridHi    EQU $45
    99 -             00000046  cell_count    EQU $46             ; Used to count 
   100 -                       
   101 -                         CHIP  65C02
   102 -                         LONGI OFF
       -                
   103 -                         LONGA OFF
   104 -                       
   105 -                         .sttl "Game of Life on a 24x24 LED."
   106 -                         .page
   107 -                       
   108 -                       ; Put in code segment...
   109 -                        CODE
   110 -                       
   111 -                       ; START @ $1000
   112 -                                     org $1000
   113 -                           START:
   114 -                       
   115 - 00:1000  A9 09                      LDA #$09            ; 9 UNITS, 24X24 
   116 - 00:1002  85 32                      STA units
   117 - 00:1004  20 B7 11                   JSR init_VIA        ; Init VIA
   118 - 00:1007  20 CC 11                   JSR init_max7219    ; Inint Dispaly
   119 - 00:100A  A9 00                      LDA #$00
   120 - 00:100C  85 40                      STA tick            ; Start with grid
   121 -                       
   122 - 00:100E  20 32 10     MainLoop      JSR LifeToLED       ; Conver Lif grid
   123 - 00:1011  20 73 11                   JSR showGridData    ; Display it
   124 - 00:1014  20 A6 10                   JSR next_tick       ; Calculate next 
   125 - 00:1017  E6 40                      INC tick            ; Next tick
   126 - 00:1019  20 27 10                   JSR delay           ; Small delay
   127 - 00:101C  20 27 10                   JSR delay           ; Small delay
   128 - 00:101F  20 27 10                   JSR delay           ; Small delay
   129 - 00:1022  20 27 10                   JSR delay           ; Small delay
   130 - 00:1025  80 E7                      BRA MainLoop        ; Make it an infi
   131 -                       
   132 - 00:1027  A0 00        delay         LDY #$00            ; Loop 256*256 ti
   133 - 00:1029  A2 00                      LDX #$00
   134 - 00:102B  CA           dloop1        DEX
   135 - 00:102C  D0 FD                      BNE dloop1
   136 - 00:102E  88                         DEY
   137 - 00:102F  D0 FA                      BNE dloop1
   138 - 00:1031  60                         RTS
   139 -                       
   140 - 00:1032  A5 40        LifeToLED     LDA tick            ; Test which grid
   141 - 00:1034  29 01                      AND #$01
   142 - 00:1036  D0 0A                      BNE load_grid2
   143 - 00:1038  A9 xx                      LDA #<Grid1         ; Load Grid1 to p
   144 - 00:103A  85 42                      STA GridLow
   145 - 00:103C  A9 xx                      LDA #>Grid1
   146 - 00:103E  85 43                      STA GridHi
   147 - 00:1040  80 08                      BRA grid_loaded
   148 - 00:1042  A9 xx        load_grid2    LDA #<Grid2         ; Load Grid2 to p
   149 - 00:1044  85 42                      STA GridLow
   150 - 00:1046  A9 xx                      LDA #>Grid2
   151 - 00:1048  85 43                      STA GridHi
   152 - 00:104A  18           grid_loaded   CLC                 ; Clear carry so 
   153 - 00:104B  A5 42                      LDA GridLow
   154 - 00:104D  69 1B                      ADC #27             ; Add 27 bytes, t
   155 - 00:104F  85 42                      STA GridLow
   156 - 00:1051  90 02                      BCC no_carry        ; If we got a car
   157 - 00:1053  E6 43                      INC GridHi
   158 - 00:1055  A9 xx        no_carry      LDA #<GridData      ; Pointer to LED 
   159 - 00:1057  85 37                      STA LEDGridl
   160 - 00:1059  A9 xx                      LDA #>GridData
   161 - 00:105B  85 38                      STA LEDGridh
   162 - 00:105D  A9 08                      LDA #$08            ; Count 8 bit per
   163 - 00:105F  85 33                      STA count
   164 - 00:1061  A0 00                      LDY #0              ; Start at second
   165 - 00:1063  84 35                      STY cols            ; Since it's zero
   166 - 00:1065  A2 18                      LDX #24             ; We want to set 
   167 - 00:1067  86 41                      STX row_counter
   168 - 00:1069  B1 42        grid_loop2    LDA (GridLow),Y     ; Get byte in cur
   169 - 00:106B  F0 06                      BEQ setDead         ; If, zero it's a
   170 - 00:106D  38                         SEC
   171 - 00:106E  20 8F 10                   JSR updateLedGrid
   172 - 00:1071  80 04                      BRA set_Done
   173 - 00:1073  18           setDead       CLC
   174 - 00:1074  20 8F 10                   JSR updateLedGrid
   175 - 00:1077  C8           set_Done      INY                 ; Next byte.
   176 - 00:1078  CA                         DEX                 ; Count down colu
   177 - 00:1079  D0 EE                      BNE grid_loop2      ; Are we done wit
   178 - 00:107B  18                         CLC                 ; Clear carry so 
   179 - 00:107C  A5 42                      LDA GridLow
   180 - 00:107E  69 1A                      ADC #26             ; Add 26 bytes, t
   181 - 00:1080  85 42                      STA GridLow
   182 - 00:1082  90 02                      BCC no_carry2       ; If we got a car
   183 - 00:1084  E6 43                      INC GridHi
   184 - 00:1086  A0 00        no_carry2     LDY #0              ; Reset Y
   185 - 00:1088  A2 18                      LDX #24             ; Reset column by
   186 - 00:108A  C6 41                      DEC row_counter
   187 - 00:108C  D0 DB                      BNE grid_loop2
   188 - 00:108E  60                         RTS
   189 -                       
   190 - 00:108F  26 36        updateLedGrid ROL temp            ; Shift in LED.
   191 - 00:1091  C6 33                      DEC count           ; 8 bits yet ?
   192 - 00:1093  D0 10                      BNE ulgdone
   193 - 00:1095  A9 08                      LDA #$08
   194 - 00:1097  85 33                      STA count           ; Reset counter
   195 - 00:1099  84 39                      STY temp2           ; Save Y
   196 - 00:109B  A4 35                      LDY cols            ; Load offset in 
   197 - 00:22D9  A5 36                      LDA temp            ; Get LED data
   198 - 00:22DB  91 37                      STA (LEDGridl),y    ; Store it in gri
   199 - 00:22DD  E6 35                      INC cols            ; Increase offset
   200 - 00:22DF  A4 39                      LDY temp2           ; Restore Y.
   201 - 00:22E1  60           ulgdone       RTS
   202 -                       
   203 -                       
   204 - 00:22E2  A5 40        next_tick     LDA tick
   205 - 00:22E4  29 01                      AND #$01
   206 - 00:22E6  D0 12                      BNE a_load_grid2
   207 - 00:22E8  A9 xx                      LDA #<Grid1         ; Load Grid1 to p
   208 - 00:22EA  85 42                      STA GridLow
   209 - 00:22EC  A9 xx                      LDA #>Grid1
   210 - 00:22EE  85 43                      STA GridHi
   211 - 00:22F0  A9 xx                      LDA #<Grid2         ; Load Grid2 to W
   212 - 00:22F2  85 44                      STA WorkGridLow
   213 - 00:22F4  A9 xx                      LDA #>Grid2
   214 - 00:22F6  85 45                      STA WorkGridHi
   215 - 00:22F8  80 10                      BRA a_grid_loaded
   216 - 00:22FA  A9 xx        a_load_grid2  LDA #<Grid2         ; Load Grid2 to p
   217 - 00:22FC  85 42                      STA GridLow
   218 - 00:22FE  A9 xx                      LDA #>Grid2
   219 - 00:2300  85 43                      STA GridHi
   220 - 00:2302  A9 xx                      LDA #<Grid1         ; Load Grid1 to W
   221 - 00:2304  85 44                      STA WorkGridLow
   222 - 00:2306  A9 xx                      LDA #>Grid1
   223 - 00:2308  85 45                      STA WorkGridHi
   224 - 00:230A  18           a_grid_loaded CLC                 ; We will count c
   225 - 00:230B  A5 44                      LDA WorkGridLow
   226 - 00:230D  69 1B                      ADC #27             ; Add 27 bytes, t
   227 - 00:230F  85 44                      STA WorkGridLow
   228 - 00:2311  90 02                      BCC a_no_carry      ; If we got a car
   229 - 00:2313  E6 45                      INC WorkGridHi
   230 - 00:2315  A2 18        a_no_carry    LDX #24             ; We want to scan
   231 - 00:2317  86 41                      STX row_counter
   232 - 00:2319  20 30 11     grid_loop     JSR count_hood      ; Count neighbour
   233 - 00:231C  A0 00                      LDY #0              ; Zero Y
   234 - 00:231E  A5 46                      LDA cell_count      ; Get result
   235 - 00:2320  C9 02                      CMP #02             ; Two cells ?
   236 - 00:2322  90 10                      BCC cell_dies       ; Less than two, 
   237 - 00:2324  C9 03                      CMP #3              ; Three cells ?
   238 - 00:2326  F0 12                      BEQ cell_birth      ; Three cells wil
   239 - 00:2328  B0 0A                      BCS cell_dies       ; If more than 3 
   240 - 00:232A  A0 1B                      LDY #27             ; We have two cel
   241 - 00:232C  B1 42                      LDA (GridLow),Y     ; Got the cell
   242 - 00:232E  A0 00                      LDY #0              ; Form pos 27 on 
   243 - 00:2330  91 44                      STA (WorkGridLow),Y ; Store cell.
   244 - 00:2332  80 0A                      BRA cell_count_done ; Continue on...
   245 - 00:2334  A9 00        cell_dies     LDA #0              ; Cell dies, A = 
   246 - 00:2336  91 44                      STA (WorkGridLow),Y ; Store cell.
   247 - 00:2338  80 04                      BRA cell_count_done ; Continue on...
   248 - 00:233A  A9 01        cell_birth    LDA #1              ; Cell was born, 
   249 - 00:233C  91 44                      STA (WorkGridLow),Y ; Store cell.
   250 -                       cell_count_done
   251 - 00:233E  E6 44                      INC WorkGridLow     ; Next position
   252 - 00:2340  D0 02                      BNE a_no_inc1
   253 - 00:2342  E6 45                      INC WorkGridHi
   254 - 00:2344  E6 42        a_no_inc1     INC GridLow         ; Next position
   255 - 00:2346  D0 02                      BNE a_no_inc2
   256 - 00:2348  E6 43                      INC GridHi
   257 - 00:234A  CA           a_no_inc2     DEX                 ; Next col.
   258 - 00:234B  D0 CC                      BNE grid_loop       ; Row not done, c
   259 - 00:234D  A2 18                      LDX #24             ; Reset col count
   260 - 00:234F  E6 44                      INC WorkGridLow     ; Next position, 
   261 - 00:2351  D0 02                      BNE a_no_inc3
   262 - 00:2353  E6 45                      INC WorkGridHi
   263 - 00:2355  E6 42        a_no_inc3     INC GridLow         ; Next position 1
   264 - 00:2357  D0 02                      BNE a_no_inc4
   265 - 00:2359  E6 43                      INC GridHi
   266 - 00:235B  E6 44        a_no_inc4     INC WorkGridLow     ; Next position 2
   267 - 00:235D  D0 02                      BNE a_no_inc5
   268 - 00:235F  E6 45                      INC WorkGridHi
   269 - 00:2361  E6 42        a_no_inc5     INC GridLow         ; Next position 2
   270 - 00:2363  D0 02                      BNE a_no_inc6
   271 - 00:2365  E6 43                      INC GridHi
   272 - 00:2367  C6 41        a_no_inc6     DEC row_counter     ; Next row.
   273 - 00:2369  D0 AE                      BNE grid_loop       ; Row not done, c
   274 - 00:236B  60                         RTS
   275 -                       
   276 - 00:236C  A0 00        count_hood    LDY #0
   277 - 00:236E  84 46                      STY cell_count      ; Zero cell count
   278 - 00:2370  B1 42                      LDA (GridLow),Y     ; Y=0, neighbour 
   279 - 00:2372  F0 02                      BEQ b_no_add1
   280 - 00:2374  E6 46                      INC cell_count
   281 - 00:2376  A0 01        b_no_add1     LDY #1
   282 - 00:2378  B1 42                      LDA (GridLow),Y     ; Y=1, neighbour 
   283 - 00:237A  F0 02                      BEQ b_no_add2
   284 - 00:237C  E6 46                      INC cell_count
   285 - 00:237E  A0 02        b_no_add2     LDY #2
   286 - 00:2380  B1 42                      LDA (GridLow),Y     ; Y=2, neighbour 
   287 - 00:2382  F0 02                      BEQ b_no_add3
   288 - 00:2384  E6 46                      INC cell_count
   289 - 00:2386  A0 1A        b_no_add3     LDY #26
   290 - 00:2388  B1 42                      LDA (GridLow),Y     ; Y=26, neighbour
   291 - 00:238A  F0 02                      BEQ b_no_add4
   292 - 00:238C  E6 46                      INC cell_count
   293 - 00:238E  A0 1C        b_no_add4     LDY #28
   294 - 00:2390  B1 42                      LDA (GridLow),Y     ; Y=28, neighbour
   295 - 00:2392  F0 02                      BEQ b_no_add5
   296 - 00:2394  E6 46                      INC cell_count
   297 - 00:2396  A0 34        b_no_add5     LDY #52
   298 - 00:2398  B1 42                      LDA (GridLow),Y     ; Y=52, neighbour
   299 - 00:239A  F0 02                      BEQ b_no_add6
   300 - 00:239C  E6 46                      INC cell_count
   301 - 00:239E  A0 35        b_no_add6     LDY #53
   302 - 00:23A0  B1 42                      LDA (GridLow),Y     ; Y=53, neighbour
   303 - 00:23A2  F0 02                      BEQ b_no_add7
   304 - 00:23A4  E6 46                      INC cell_count
   305 - 00:23A6  A0 36        b_no_add7     LDY #54
   306 - 00:23A8  B1 42                      LDA (GridLow),Y     ; Y=53, neighbour
   307 - 00:23AA  F0 02                      BEQ b_no_add8
   308 - 00:23AC  E6 46                      INC cell_count
   309 - 00:23AE  60           b_no_add8     RTS
   310 -                       
   311 -                       showGridData
   312 - 00:23AF  A9 xx                      LDA #<GridData
   313 - 00:23B1  85 37                      STA LEDGridl
   314 - 00:23B3  A9 xx                      LDA #>GridData
   315 - 00:23B5  85 38                      STA LEDGridh
   316 - 00:23B7  A0 01                      LDY #1              ; Start with row 
   317 - 00:23B9  84 34                      STY rows
   318 - 00:23BB  A0 08                      LDY #8
   319 - 00:23BD  84 33                      STY count           ; Count 8 rows
   320 -                       
   321 - 00:23BF  A6 34        sgdloop1      LDX rows            ; Row to X
   322 - 00:23C1  86 30                      STX add             ; Store in addres
   323 - 00:23C3  86 36                      STX temp            ; Prepare to mult
   324 - 00:23C5  18                         CLC
   325 - 00:23C6  26 36                      ROL temp
   326 - 00:23C8  A5 34                      LDA rows
   327 - 00:23CA  65 36                      ADC temp
   328 - 00:23CC  69 2F                      ADC #47
   329 - 00:23CE  A8                         TAY                 ; Y=(row*3) + 47,
   330 - 00:23CF  A2 03                      LDX #3              ; do three chars
   331 - 00:23D1  86 39                      STX temp2           ; three times = 9
   332 -                       
   333 - 00:23D3  B1 37        c_loop1       LDA (LEDGridl),y
   334 - 00:23D5  85 31                      STA dat
   335 - 00:23D7  20 0E 12                   JSR SendData
   336 - 00:23DA  88                         DEY                 ; point to previo
   337 - 00:23DB  CA                         DEX                 ; Three chars ?
   338 - 00:23DC  D0 F5                      BNE c_loop1
   339 - 00:23DE  98                         TYA
   340 - 00:23DF  38                         SEC
   341 - 00:23E0  E9 15                      SBC #21
   342 - 00:23E2  A8                         TAY                 ; Y = Y - 21, mov
   343 - 00:23E3  A2 03                      LDX #3              ; Three more char
   344 - 00:23E5  C6 39                      DEC temp2           ; did we do all 9
   345 - 00:23E7  D0 EA                      BNE c_loop1
   346 -                       
   347 - 00:23E9  20 27 12                   JSR LatchData
   348 -                       
   349 - 00:23EC  E6 34                      INC rows            ; Next row
   350 - 00:23EE  C6 33                      DEC count           ; Did we do them 
   351 - 00:23F0  D0 CD                      BNE sgdloop1        ; Nope, recalcula
   352 - 00:23F2  60                         RTS
   353 -                       
   354 - 00:23F3  A9 FF        init_VIA      LDA #$FF            ; Make port A out
   355 - 00:23F5  8D C3 7F                   STA VIA_DDRA
   356 - 00:23F8  A9 00                      LDA #$00            ; Make ports low.
   357 - 00:23FA  8D C1 7F                   STA VIA_IOA
   358 - 00:23FD  AD CB 7F                   LDA VIA_ACR         ; Load ACR
   359 - 00:2400  29 E3                      AND #$E3            ; Zero bit 4,3,2.
   360 - 00:2402  09 18                      ORA #$18            ; Shift out using
   361 - 00:2404  8D CB 7F                   STA VIA_ACR
   362 - 00:2407  60                         RTS
   363 -                       
   364 - 00:2408  A9 0A        init_max7219  LDA #10             ; Intensity addre
   365 - 00:240A  85 30                      STA add
   366 - 00:240C  A9 0A                      LDA #10             ; 10 out of 15
   367 - 00:240E  85 31                      STA dat
   368 - 00:2410  20 05 12                   JSR SendAllUnits
   369 - 00:2413  20 27 12                   JSR LatchData
   370 -                       
   371 - 00:2416  A9 0B                      LDA #11             ; Scan limits (Ho
   372 - 00:2418  85 30                      STA add
   373 - 00:241A  A9 07                      LDA #7              ; All 8 rows
   374 - 00:241C  85 31                      STA dat
   375 - 00:241E  20 05 12                   JSR SendAllUnits
   376 - 00:2421  20 27 12                   JSR LatchData
   377 -                       
   378 - 00:2424  A9 09                      LDA #9              ; Decode mode
   379 - 00:2426  85 30                      STA add
   380 - 00:2428  A9 00                      LDA #0              ; No decoding, us
   381 - 00:242A  85 31                      STA dat
   382 - 00:242C  20 05 12                   JSR SendAllUnits
   383 - 00:242F  20 27 12                   JSR LatchData
   384 -                       
   385 - 00:2432  A9 0C                      LDA #12             ; Shutdown regist
   386 - 00:2434  85 30                      STA add
   387 - 00:2436  A9 01                      LDA #1              ; No shutdown, no
   388 - 00:2438  85 31                      STA dat
   389 - 00:243A  20 05 12                   JSR SendAllUnits
   390 - 00:243D  20 27 12                   JSR LatchData
   391 - 00:2440  60                         RTS
   392 -                       
   393 - 00:2441  A4 32        SendAllUnits  LDY units           ; Send same data 
   394 - 00:2443  20 0E 12     sauloop       JSR SendData
   395 - 00:2446  88                         DEY
   396 - 00:2447  D0 FA                      BNE sauloop
   397 - 00:2449  60                         RTS
   398 -                       
   399 - 00:244A  A5 30        SendData      LDA add             ; Address for MAX
   400 - 00:244C  8D CA 7F                   STA VIA_SR          ; Shift it...
   401 - 00:244F  AD CD 7F     d_wait1       LDA VIA_IFR         ; Are we done yet
   402 - 00:2452  29 04                      AND #$04
   403 - 00:2454  F0 F9                      BEQ d_wait1         ; Nope, continue.
   404 - 00:2456  A5 31                      LDA dat             ; Data for MAX721
   405 - 00:2458  8D CA 7F                   STA VIA_SR          ; Shift it...
   406 - 00:245B  AD CD 7F     d_wait2       LDA VIA_IFR         ; Are we done yet
   407 - 00:245E  29 04                      AND #$04
   408 - 00:2460  F0 F9                      BEQ d_wait2         ; Nope, continue.
   409 - 00:2462  60                         RTS
   410 -                       
   411 - 00:2463  A9 01        LatchData     LDA #$01            ; Set Pin PA0 hig
   412 - 00:2465  8D C1 7F                   STA VIA_IOA         ; This will load 
   413 - 00:2468  A9 00                      LDA #$00            ; Set Pin PA0 Low
   414 - 00:246A  8D C1 7F                   STA VIA_IOA         ; Done loading th
   415 - 00:246D  60                         RTS
   416 -                       
   417 -                        ENDS
   418 -                       
   419 -                       ; Put in data segment.
   420 -                        DATA
   421 -                       
   422 -                       GridData
   423 - 00:123C  7E 00 00           BYTE $7E, $00, $00 ; 1
   424 - 00:123F  7E 00 00           BYTE $7E, $00, $00 ; 2
   425 - 00:1242  66 00 00           BYTE $66, $00, $00 ; 3
   426 - 00:1245  66 3C 00           BYTE $66, $3C, $00 ; 4
   427 - 00:1248  0C 3C 00           BYTE $0C, $3C, $00 ; 5
   428 - 00:124B  0C 66 00           BYTE $0C, $66, $00 ; 6
   429 - 00:124E  18 66 00           BYTE $18, $66, $00 ; 7
   430 - 00:1251  18 66 3C           BYTE $18, $66, $3C ; 8
   431 - 00:1254  18 66 3C           BYTE $18, $66, $3C ; 9
   432 - 00:1257  18 3C 66           BYTE $18, $3C, $66 ; 10
   433 - 00:125A  18 3C 66           BYTE $18, $3C, $66 ; 11
   434 - 00:125D  18 66 66           BYTE $18, $66, $66 ; 12
   435 - 00:1260  18 66 66           BYTE $18, $66, $66 ; 13
   436 - 00:1263  18 66 3E           BYTE $18, $66, $3E ; 14
   437 - 00:1266  00 66 3E           BYTE $00, $66, $3E ; 15
   438 - 00:1269  00 3C 06           BYTE $00, $3C, $06 ; 16
   439 - 00:126C  00 3C 06           BYTE $00, $3C, $06 ; 17
   440 - 00:126F  00 00 66           BYTE $00, $00, $66 ; 18
   441 - 00:1272  00 00 66           BYTE $00, $00, $66 ; 19
   442 - 00:1275  00 00 3C           BYTE $00, $00, $3C ; 20
   443 - 00:1278  00 00 3C           BYTE $00, $00, $3C ; 21
   444 - 00:127B  11 00 00           BYTE $11, $00, $00 ; 22
   445 - 00:127E  00 11 00           BYTE $00, $11, $00 ; 23
   446 - 00:1281  00 00 11           BYTE $00, $00, $11 ; 24
   447 -                       
   448 -                       ;      .org $1300      ; For Debug
   449 -                       
   450 - 00:1284  00 00 00 00  Grid1      BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
       - 00:1288  00 00 00 00  
       - 00:128C  00 00 00 00  
       - 00:1290  00 00 00 00  
       - 00:1294  00 00 00 00  
       - 00:1298  00 00 00 00  
       -                   00:0060: 00 00 
   451 - 00:129E  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:12A2  00 00 00 00  
       - 00:12A6  00 00 00 00  
       - 00:12AA  00 00 00 00  
       - 00:12AE  00 00 00 00  
       - 00:12B2  00 00 00 00  
       -                   00:007A: 00 00 
   452 - 00:12B8  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:12BC  00 00 00 00  
       - 00:12C0  00 00 00 00  
       - 00:12C4  00 00 00 00  
       - 00:12C8  00 00 00 00  
       - 00:12CC  00 00 00 00  
       -                   00:0094: 00 00 
   453 - 00:12D2  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:12D6  00 00 00 00  
       - 00:12DA  00 00 00 00  
       - 00:12DE  00 00 00 00  
       - 00:12E2  00 00 00 00  
       - 00:12E6  00 00 00 00  
       -                   00:00AE: 00 00 
   454 - 00:12EC  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:12F0  00 00 00 00  
       - 00:12F4  00 00 00 00  
       - 00:12F8  00 00 00 00  
       - 00:12FC  00 00 00 00  
       - 00:1300  00 00 00 00  
       -                   00:00C8: 00 00 
   455 - 00:1306  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:130A  00 00 00 00  
       - 00:130E  00 00 00 00  
       - 00:1312  00 00 00 00  
       - 00:1316  00 00 00 00  
       - 00:131A  00 00 00 00  
       -                   00:00E2: 00 00 
   456 - 00:1320  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1324  00 00 00 00  
       - 00:1328  00 00 00 00  
       - 00:132C  00 00 00 00  
       - 00:1330  00 00 00 00  
       - 00:1334  00 00 00 00  
       -                   00:00FC: 00 00 
   457 - 00:133A  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:133E  00 00 00 00  
       - 00:1342  00 00 00 00  
       - 00:1346  00 00 00 00  
       - 00:134A  00 00 00 00  
       - 00:134E  00 00 00 00  
       -                   00:0116: 00 00 
   458 - 00:1354  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1358  00 00 00 00  
       - 00:135C  00 00 00 00  
       - 00:1360  00 00 00 00  
       - 00:1364  00 00 00 00  
       - 00:1368  00 00 00 00  
       -                   00:0130: 00 00 
   459 - 00:136E  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1372  00 00 00 00  
       - 00:1376  00 00 00 00  
       - 00:137A  00 00 00 00  
       - 00:137E  00 00 00 00  
       - 00:1382  00 00 00 00  
       -                   00:014A: 00 00 
   460 - 00:1388  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:138C  00 00 00 00  
       - 00:1390  00 00 00 00  
       - 00:1394  00 00 00 00  
       - 00:1398  00 00 00 00  
       - 00:139C  00 00 00 00  
       -                   00:0164: 00 00 
   461 - 00:13A2  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,
       - 00:13A6  00 00 00 00  
       - 00:13AA  00 01 01 01  
       - 00:13AE  01 01 01 01  
       - 00:13B2  01 00 00 00  
       - 00:13B6  00 00 00 00  
       -                   00:017E: 00 00 
   462 - 00:13BC  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,0,
       - 00:13C0  00 00 00 00  
       - 00:13C4  00 01 00 01  
       - 00:13C8  01 01 01 00  
       - 00:13CC  01 00 00 00  
       - 00:13D0  00 00 00 00  
       -                   00:0198: 00 00 
   463 - 00:13D6  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,
       - 00:13DA  00 00 00 00  
       - 00:13DE  00 01 01 01  
       - 00:13E2  01 01 01 01  
       - 00:13E6  01 00 00 00  
       - 00:13EA  00 00 00 00  
       -                   00:01B2: 00 00 
   464 - 00:13F0  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:13F4  00 00 00 00  
       - 00:13F8  00 00 00 00  
       - 00:13FC  00 00 00 00  
       - 00:1400  00 00 00 00  
       - 00:1404  00 00 00 00  
       -                   00:01CC: 00 00 
   465 - 00:140A  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:140E  00 00 00 00  
       - 00:1412  00 00 00 00  
       - 00:1416  00 00 00 00  
       - 00:141A  00 00 00 00  
       - 00:141E  00 00 00 00  
       -                   00:01E6: 00 00 
   466 - 00:1424  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1428  00 00 00 00  
       - 00:142C  00 00 00 00  
       - 00:1430  00 00 00 00  
       - 00:1434  00 00 00 00  
       - 00:1438  00 00 00 00  
       -                   00:0200: 00 00 
   467 - 00:143E  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1442  00 00 00 00  
       - 00:1446  00 00 00 00  
       - 00:144A  00 00 00 00  
       - 00:144E  00 00 00 00  
       - 00:1452  00 00 00 00  
       -                   00:021A: 00 00 
   468 - 00:1458  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:145C  00 00 00 00  
       - 00:1460  00 00 00 00  
       - 00:1464  00 00 00 00  
       - 00:1468  00 00 00 00  
       - 00:146C  00 00 00 00  
       -                   00:0234: 00 00 
   469 - 00:1472  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1476  00 00 00 00  
       - 00:147A  00 00 00 00  
       - 00:147E  00 00 00 00  
       - 00:1482  00 00 00 00  
       - 00:1486  00 00 00 00  
       -                   00:024E: 00 00 
   470 - 00:148C  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1490  00 00 00 00  
       - 00:1494  00 00 00 00  
       - 00:1498  00 00 00 00  
       - 00:149C  00 00 00 00  
       - 00:14A0  00 00 00 00  
       -                   00:0268: 00 00 
   471 - 00:14A6  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:14AA  00 00 00 00  
       - 00:14AE  00 00 00 00  
       - 00:14B2  00 00 00 00  
       - 00:14B6  00 00 00 00  
       - 00:14BA  00 00 00 00  
       -                   00:0282: 00 00 
   472 - 00:14C0  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:14C4  00 00 00 00  
       - 00:14C8  00 00 00 00  
       - 00:14CC  00 00 00 00  
       - 00:14D0  00 00 00 00  
       - 00:14D4  00 00 00 00  
       -                   00:029C: 00 00 
   473 - 00:14DA  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:14DE  00 00 00 00  
       - 00:14E2  00 00 00 00  
       - 00:14E6  00 00 00 00  
       - 00:14EA  00 00 00 00  
       - 00:14EE  00 00 00 00  
       -                   00:02B6: 00 00 
   474 - 00:14F4  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:14F8  00 00 00 00  
       - 00:14FC  00 00 00 00  
       - 00:1500  00 00 00 00  
       - 00:1504  00 00 00 00  
       - 00:1508  00 00 00 00  
       -                   00:02D0: 00 00 
   475 - 00:150E  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1512  00 00 00 00  
       - 00:1516  00 00 00 00  
       - 00:151A  00 00 00 00  
       - 00:151E  00 00 00 00  
       - 00:1522  00 00 00 00  
       -                   00:02EA: 00 00 
   476 -                       
   477 -                       ;      .org $1600      ; For Debug
   478 -                       
   479 - 00:1528  00 00 00 00  Grid2      BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
       - 00:152C  00 00 00 00  
       - 00:1530  00 00 00 00  
       - 00:1534  00 00 00 00  
       - 00:1538  00 00 00 00  
       - 00:153C  00 00 00 00  
       -                   00:0304: 00 00 
   480 - 00:1542  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1546  00 00 00 00  
       - 00:154A  00 00 00 00  
       - 00:154E  00 00 00 00  
       - 00:1552  00 00 00 00  
       - 00:1556  00 00 00 00  
       -                   00:031E: 00 00 
   481 - 00:155C  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1560  00 00 00 00  
       - 00:1564  00 00 00 00  
       - 00:1568  00 00 00 00  
       - 00:156C  00 00 00 00  
       - 00:1570  00 00 00 00  
       -                   00:0338: 00 00 
   482 - 00:1576  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:157A  00 00 00 00  
       - 00:157E  00 00 00 00  
       - 00:1582  00 00 00 00  
       - 00:1586  00 00 00 00  
       - 00:158A  00 00 00 00  
       -                   00:0352: 00 00 
   483 - 00:1590  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1594  00 00 00 00  
       - 00:1598  00 00 00 00  
       - 00:159C  00 00 00 00  
       - 00:15A0  00 00 00 00  
       - 00:15A4  00 00 00 00  
       -                   00:036C: 00 00 
   484 - 00:15AA  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:15AE  00 00 00 00  
       - 00:15B2  00 00 00 00  
       - 00:15B6  00 00 00 00  
       - 00:15BA  00 00 00 00  
       - 00:15BE  00 00 00 00  
       -                   00:0386: 00 00 
   485 - 00:15C4  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:15C8  00 00 00 00  
       - 00:15CC  00 00 00 00  
       - 00:15D0  00 00 00 00  
       - 00:15D4  00 00 00 00  
       - 00:15D8  00 00 00 00  
       -                   00:03A0: 00 00 
   486 - 00:15DE  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:15E2  00 00 00 00  
       - 00:15E6  00 00 00 00  
       - 00:15EA  00 00 00 00  
       - 00:15EE  00 00 00 00  
       - 00:15F2  00 00 00 00  
       -                   00:03BA: 00 00 
   487 - 00:15F8  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:15FC  00 00 00 00  
       - 00:1600  00 00 00 00  
       - 00:1604  00 00 00 00  
       - 00:1608  00 00 00 00  
       - 00:160C  00 00 00 00  
       -                   00:03D4: 00 00 
   488 - 00:1612  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1616  00 00 00 00  
       - 00:161A  00 00 00 00  
       - 00:161E  00 00 00 00  
       - 00:1622  00 00 00 00  
       - 00:1626  00 00 00 00  
       -                   00:03EE: 00 00 
   489 - 00:162C  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1630  00 00 00 00  
       - 00:1634  00 00 00 00  
       - 00:1638  00 00 00 00  
       - 00:163C  00 00 00 00  
       - 00:1640  00 00 00 00  
       -                   00:0408: 00 00 
   490 - 00:1646  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:164A  00 00 00 00  
       - 00:164E  00 00 00 00  
       - 00:1652  00 00 00 00  
       - 00:1656  00 00 00 00  
       - 00:165A  00 00 00 00  
       -                   00:0422: 00 00 
   491 - 00:1660  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1664  00 00 00 00  
       - 00:1668  00 00 00 00  
       - 00:166C  00 00 00 00  
       - 00:1670  00 00 00 00  
       - 00:1674  00 00 00 00  
       -                   00:043C: 00 00 
   492 - 00:167A  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:167E  00 00 00 00  
       - 00:1682  00 00 00 00  
       - 00:1686  00 00 00 00  
       - 00:168A  00 00 00 00  
       - 00:168E  00 00 00 00  
       -                   00:0456: 00 00 
   493 - 00:1694  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1698  00 00 00 00  
       - 00:169C  00 00 00 00  
       - 00:16A0  00 00 00 00  
       - 00:16A4  00 00 00 00  
       - 00:16A8  00 00 00 00  
       -                   00:0470: 00 00 
   494 - 00:16AE  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:16B2  00 00 00 00  
       - 00:16B6  00 00 00 00  
       - 00:16BA  00 00 00 00  
       - 00:16BE  00 00 00 00  
       - 00:16C2  00 00 00 00  
       -                   00:048A: 00 00 
   495 - 00:16C8  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:16CC  00 00 00 00  
       - 00:16D0  00 00 00 00  
       - 00:16D4  00 00 00 00  
       - 00:16D8  00 00 00 00  
       - 00:16DC  00 00 00 00  
       -                   00:04A4: 00 00 
   496 - 00:16E2  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:16E6  00 00 00 00  
       - 00:16EA  00 00 00 00  
       - 00:16EE  00 00 00 00  
       - 00:16F2  00 00 00 00  
       - 00:16F6  00 00 00 00  
       -                   00:04BE: 00 00 
   497 - 00:16FC  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1700  00 00 00 00  
       - 00:1704  00 00 00 00  
       - 00:1708  00 00 00 00  
       - 00:170C  00 00 00 00  
       - 00:1710  00 00 00 00  
       -                   00:04D8: 00 00 
   498 - 00:1716  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:171A  00 00 00 00  
       - 00:171E  00 00 00 00  
       - 00:1722  00 00 00 00  
       - 00:1726  00 00 00 00  
       - 00:172A  00 00 00 00  
       -                   00:04F2: 00 00 
   499 - 00:1730  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1734  00 00 00 00  
       - 00:1738  00 00 00 00  
       - 00:173C  00 00 00 00  
       - 00:1740  00 00 00 00  
       - 00:1744  00 00 00 00  
       -                   00:050C: 00 00 
   500 - 00:174A  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:174E  00 00 00 00  
       - 00:1752  00 00 00 00  
       - 00:1756  00 00 00 00  
       - 00:175A  00 00 00 00  
       - 00:175E  00 00 00 00  
       -                   00:0526: 00 00 
   501 - 00:1764  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1768  00 00 00 00  
       - 00:176C  00 00 00 00  
       - 00:1770  00 00 00 00  
       - 00:1774  00 00 00 00  
       - 00:1778  00 00 00 00  
       -                   00:0540: 00 00 
   502 - 00:177E  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:1782  00 00 00 00  
       - 00:1786  00 00 00 00  
       - 00:178A  00 00 00 00  
       - 00:178E  00 00 00 00  
       - 00:1792  00 00 00 00  
       -                   00:055A: 00 00 
   503 - 00:1798  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:179C  00 00 00 00  
       - 00:17A0  00 00 00 00  
       - 00:17A4  00 00 00 00  
       - 00:17A8  00 00 00 00  
       - 00:17AC  00 00 00 00  
       -                   00:0574: 00 00 
   504 - 00:17B2  00 00 00 00        BYTE 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
       - 00:17B6  00 00 00 00  
       - 00:17BA  00 00 00 00  
       - 00:17BE  00 00 00 00  
       - 00:17C2  00 00 00 00  
       - 00:17C6  00 00 00 00  
       -                   00:058E: 00 00 
   505 -                       
   506 -                       
   507 - 00:17CC                ENDS
   508 -                       
   509 -                       
   510 -                       
   511 -                       ; Standard stuff to make compiler and Debug work..
   512 -                       
   513 -                         ; Back in code segment.
   514 -                        CODE
   515 -                             ;;------------------------------------------
   516 -                             ;; FUNCTION NAME  : Event Hander re-vector
   517 -                             ;;------------------:-----------------------
   518 -                               IRQHandler:
   519 - 00:2232  48                       pha
   520 - 00:2233  68                       pla
   521 - 00:2234  40                       rti
   522 -                       
   523 -                             badVec:       ; $FFE0 - IRQRVD2(134)
   524 - 00:2235  08                   php
   525 - 00:2236  48                   pha
   526 - 00:2237  A9 FF                lda #$FF
   527 -                                           ;clear Irq
   528 - 00:2239  68                   pla
   529 - 00:223A  28                   plp
   530 - 00:223B  40                   rti
   531 -                                   ;;-----------------------------
   532 -                                   ;;
   533 -                                   ;;      Reset and Interr
   534 -                                   ;;
   535 -                                   ;;-----------------------------
   536 -                       
   537 -                        ENDS
   538 -                       
   539 -                       Shadow_VECTORS  SECTION OFFSET $7EE0
   540 -                                               ;65C816 
   541 -                                               ;Status 
   542 - 00:7EE0  35 12                    dw  badVec      ; $FFE0 
   543 - 00:7EE2  35 12                    dw  badVec      ; $FFE2 
   544 - 00:7EE4  35 12                    dw  badVec      ; $FFE4 
   545 - 00:7EE6  35 12                    dw  badVec      ; $FFE6 
   546 - 00:7EE8  35 12                    dw  badVec      ; $FFE8 
   547 - 00:7EEA  35 12                    dw  badVec      ; $FFEA 
   548 - 00:7EEC  35 12                    dw  badVec      ; $FFEC 
   549 - 00:7EEE  35 12                    dw  badVec      ; $FFEE 
   550 -                                               ;Status 
   551 - 00:7EF0  35 12                    dw  badVec      ; $FFF0 
   552 - 00:7EF2  35 12                    dw  badVec      ; $FFF2 
   553 - 00:7EF4  35 12                    dw  badVec      ; $FFF4 
   554 - 00:7EF6  35 12                    dw  badVec      ; $FFF6 
   555 - 00:7EF8  35 12                    dw  badVec      ; $FFF8 
   556 -                       
   557 -                                               ; Common
   558 - 00:7EFA  35 12                    dw  badVec      ; $FFFA 
   559 - 00:7EFC  00 10                    dw  START       ; $FFFC 
   560 - 00:7EFE  32 12                    dw  IRQHandler  ; $FFFE 
   561 -                       
   562 - 00:7F00                ends
   563 -                       
   564 -                       vectors SECTION OFFSET $FFE0
   565 -                                               ;65C816 
   566 -                                               ;Status 
   567 - 00:FFE0  35 12                    dw  badVec      ; $FFE0 
   568 - 00:FFE2  35 12                    dw  badVec      ; $FFE2 
   569 - 00:FFE4  35 12                    dw  badVec      ; $FFE4 
   570 - 00:FFE6  35 12                    dw  badVec      ; $FFE6 
   571 - 00:FFE8  35 12                    dw  badVec      ; $FFE8 
   572 - 00:FFEA  35 12                    dw  badVec      ; $FFEA 
   573 - 00:FFEC  35 12                    dw  badVec      ; $FFEC 
   574 - 00:FFEE  35 12                    dw  badVec      ; $FFEE 
   575 -                                               ;Status 
   576 - 00:FFF0  35 12                    dw  badVec      ; $FFF0 
   577 - 00:FFF2  35 12                    dw  badVec      ; $FFF2 
   578 - 00:FFF4  35 12                    dw  badVec      ; $FFF4 
   579 - 00:FFF6  35 12                    dw  badVec      ; $FFF6 
   580 - 00:FFF8  35 12                    dw  badVec      ; $FFF8 
   581 -                       
   582 -                                               ; Common
   583 - 00:FFFA  35 12                    dw  badVec      ; $FFFA 
   584 - 00:FFFC  00 10                    dw  START       ; $FFFC 
   585 - 00:FFFE  32 12                    dw  IRQHandler  ; $FFFE 
   586 -                       
   587 - 01:0000                ends
       -          mbled: 587  
       -                  Errors: 0
